<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <springProperty scope="context" name="logPath" source="logging.path" defaultValue="log"/>
    <springProperty scope="context" name="maxHistory" source="logging.file.max-history" defaultValue="30"/>
    <springProperty scope="context" name="maxFileSize" source="logging.file.max-size" defaultValue="100MB"/>
    <springProperty scope="context" name="springFrameworkLogLevel" source="logging.level.org.springframework" defaultValue="ERROR"/>
    <springProperty scope="context" name="rootLogLevel" source="logging.level.root" defaultValue="DEBUG"/>

    <springProperty scope="context" name="logstashServer" source="logging.logstashServer" defaultValue="127.0.0.1:4560"/>
    <springProperty scope="context" name="appId" source="logging.appId" defaultValue="default-app"/>

<!--    <appender name="kafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>-->
<!--            <charset>UTF-8</charset>>-->
<!--        </encoder>-->
<!--        <topic>biz</topic>-->
<!--        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy" />-->
<!--        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />-->
<!--        <producerConfig>bootstrap.servers=localhost:9092</producerConfig>-->
<!--    </appender>-->

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>Debug</level>
        </filter>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch><!-- 如果命中ERROR就禁止这条日志 -->
            <onMismatch>ACCEPT</onMismatch><!-- 如果没有命中就使用这条规则 -->
        </filter>
        <file>${logPath}/log_info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/info/logback-info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${maxFileSize}</maxFileSize>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <file>${logPath}/log_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/error/logback-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${maxFileSize}</maxFileSize>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--输出到Sentry-->
<!--    <appender name="Sentry" class="io.sentry.logback.SentryAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--    </appender>-->

    <!-- 输出到logstash -->
<!--    <appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">-->
<!--        <destination>${logstashServer}</destination>-->
<!--        <encoder class="net.logstash.logback.encoder.LogstashEncoder">-->
<!--            <includeContext>false</includeContext>-->
<!--            <customFields>{"appname": "${appId}", "server": "${HOSTNAME}"}</customFields>-->
<!--        </encoder>-->
<!--    </appender>-->



    <root level="${rootLogLevel}">
        <appender-ref ref="console" />
        <appender-ref ref="info_file" />
        <appender-ref ref="error_file" />
    </root>

</configuration>